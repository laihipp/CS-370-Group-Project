import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 12566
 */
public class movieGui extends javax.swing.JFrame {

    public static boolean RETRIEVEMOVIELIST = false;
    public static boolean RETRIEVEMOVIETIMES = false;
    public static String movie = "";

    /**
     * Creates new form movieGui
     */
    public movieGui() {
        initComponents();
        currentMoviesTxt.setVisible(false);
        movieList.setVisible(false);        
        findShowtimesButton.setVisible(false);
        
        currentTimesTxt.setVisible(false);
        timesList.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        movieHeaderTxt = new javax.swing.JTextField();
        currentMoviesTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        movieList = new java.awt.List();
        findShowtimesButton = new javax.swing.JButton();
        currentTimesTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        timesList = new java.awt.List();
        retriveMoviesButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        movieHeaderTxt.setEditable(false);
        movieHeaderTxt.setText("Movie Times for Madison Square 12");
        movieHeaderTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieHeaderTxtActionPerformed(evt);
            }
        });

        currentMoviesTxt.setEditable(false);
        currentMoviesTxt.setText("Current Movies");
        currentMoviesTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentMoviesTxtActionPerformed(evt);
            }
        });

        movieList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieListActionPerformed(evt);
            }
        });
        jScrollPane1.setViewportView(movieList);

        findShowtimesButton.setText("Find Showtimes");
        findShowtimesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findShowtimesButtonActionPerformed(evt);
            }
        });

        currentTimesTxt.setEditable(false);
        currentTimesTxt.setText("Times");
        currentTimesTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentTimesTxtActionPerformed(evt);
            }
        });

        timesList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timesListActionPerformed(evt);
            }
        });
        jScrollPane2.setViewportView(timesList);

        retriveMoviesButton.setText("Retrieve Shown Movies");
        retriveMoviesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retriveMoviesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(movieHeaderTxt)
                    .addComponent(retriveMoviesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(findShowtimesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 133, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addComponent(currentMoviesTxt, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentTimesTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(movieHeaderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(retriveMoviesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentMoviesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentTimesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(findShowtimesButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>                        

    private void movieHeaderTxtActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void currentMoviesTxtActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void currentTimesTxtActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    //SEREVER ACTION
    private void retriveMoviesButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        RETRIEVEMOVIELIST = true;
        retriveMoviesButton.setVisible(false);
        currentMoviesTxt.setVisible(true);
        movieList.setVisible(true);
        
        //Send to server to populate the movie list.
        int retrieveInfo=1;
        
        String[] importedMovieList = Client.movieTimes;
        //TODO get string Array from the server
        
        
        int itemsInList=importedMovieList.length;
        
        for(int temp=0; temp <itemsInList; temp++){
        movieList.add(importedMovieList[temp]);
        };
        RETRIEVEMOVIELIST = false;
            }                                                   

  
    private void movieListActionPerformed(java.awt.event.ActionEvent evt) {                                          

        findShowtimesButton.setVisible(true);
    }                                         
   
    
    private void timesListActionPerformed(java.awt.event.ActionEvent evt) {                                          
        
            }                                         


//SERVER ACTION
    private void findShowtimesButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        RETRIEVEMOVIELIST = true;
        movie=movieList.getSelectedItem();
        //Send movie to Server
        
        String[] importedTimeList = Client.movieTimes;
        //TODO get string Array from the server
        
        
        int itemsInList=importedTimeList.length;
        
        for(int temp=0; temp <itemsInList; temp++){
        timesList.add(importedTimeList[temp]);
        };
        
        findShowtimesButton.setVisible(false);
        
        currentTimesTxt.setVisible(true);
        timesList.setVisible(true);
        RETRIEVEMOVIELIST = false;
    }                                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        //Client clientObj = new Client();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new movieGui().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField currentMoviesTxt;
    private javax.swing.JTextField currentTimesTxt;
    private javax.swing.JButton findShowtimesButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField movieHeaderTxt;
    private java.awt.List movieList;
    private javax.swing.JButton retriveMoviesButton;
    private java.awt.List timesList;
    // End of variables declaration                   
    

}

